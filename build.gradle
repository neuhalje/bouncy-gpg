buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:4.3.1'
    }
}

plugins {
    id 'java'
    id 'jacoco'

    id 'checkstyle'
    id 'pmd'

    // required for: website.gradle
    id 'org.ajoberstar.git-publish' version '0.3.0'

    // deploy to maven central
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id "com.jfrog.bintray" version "1.8.4"
    id "com.github.ben-manes.versions" version "0.27.0"
}

javadoc {
    include 'name/neuhalfen/projects/crypto/bouncycastle/openpgp/**'
    options.addBooleanOption('html5', true)
}

checkstyle {
    toolVersion = "8.1"
    showViolations = false
    sourceSets = [project.sourceSets.main]
    // maxWarnings = 0
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled true
        // html.destination rootProject.file("build/reports/checkstyle.html")
        // html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
    }
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("${buildDir}/jacocoHtml")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

pmd {
    toolVersion = "6.20.0"
    ruleSetFiles = files("config/pmd/ruleset.xml")
    ruleSets =[]
    sourceSets = [project.sourceSets.main]
    ignoreFailures = false
}

// Global configuration
project.ext.set("cms_BuildRoot", "$buildDir/website_src")

project.ext.set("specifications_cms_cmsdRoot", "$projectDir/website")
project.ext.set("specifications_cms_target", "$buildDir/website")

project.ext.set("specifications_concordion_target", "$reporting.baseDir/specs/concordion")

project.ext.set("specifications_prepareForCms_source", "$specifications_concordion_target/specs")
project.ext.set("specifications_prepareForCms_target", "$cms_BuildRoot/content/HowTo")

// use ./gradlew -PHUGO_EXEC=/path/to/hugo to configure the executable for hugo
project.ext.set("hugo", project.hasProperty("HUGO_EXEC") ? HUGO_EXEC : "hugo")

// ----

sourceCompatibility = 8
targetCompatibility = 8

group = 'name.neuhalfen.projects.crypto.bouncycastle.openpgp'
version = '2.3.0'

repositories {
    jcenter()
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output \
                      + sourceSets.test.output \
                      + configurations.testRuntime

        runtimeClasspath += output + compileClasspath

        java.srcDir file('src/integration-test/java')
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    mustRunAfter test
}
check.dependsOn integrationTest


dependencies {
    compile 'org.bouncycastle:bcprov-jdk18on:1.77'
    compile 'org.bouncycastle:bcpg-jdk18on:1.77'

    compile 'org.slf4j:slf4j-api:1.7.30'

    // @Nullable and friends are not needed at runtime
    compile 'com.google.code.findbugs:jsr305:3.0.2'

    testCompile 'junit:junit:4.13'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-core:3.2.4'
    testCompile 'org.concordion:concordion-api-documentation-extension:0.0.4'
    testCompile 'ch.qos.logback:logback-classic:1.2.3'

}


test {
    // Concordion
    // display test output on console? (for debugging)
    testLogging.showStandardStreams = false
    // write output to build/reports/spec
    systemProperties['concordion.output.dir'] = "${specifications_concordion_target}"
    // force tests to run even if code hasn't changed
    outputs.upToDateWhen { false }
    jacoco {
        enabled = true
    }
}


// bintray deployment
// configured in gradle.properties

if (hasProperty('bintray_Username')) {
    apply from: 'bintray.gradle'
}

apply from: 'website.gradle'

wrapper {
    gradleVersion = '6.5'
}

// Generate OSGI bundle metadata
apply plugin: 'biz.aQute.bnd.builder'
